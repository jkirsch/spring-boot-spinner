var myApp=angular.module("spinner",["spinner.controllers","spinner.directives","ngAnimate"]);
angular.module("spinner.controllers",["spinner.services","toaster"]).controller("EntriesCtrl",["$scope","myService","toaster","$timeout","$log","$window",function(a,d,e,m,f,g){function k(){f.log("STOMP: Attempting connection");q=new SockJS("/spinner");h=Stomp.over(q);h.connect({},r,t)}var q,h;a.participants=[];a.winner="";a.newName="";a.connected=0;a.spinning=!1;a.add=function(b){b={name:a.newName.trim()};e.clear();d.create(b).then(function(c){a.newName=""},function(a){e.pop("error","Backend error",
a.message);f.log(a)})};var l=function(b){a.spinning||(n.update(p()),a.$apply())},u=function(b){a.spinning=!0;var c;for(c=0;c<a.participants.length&&a.participants[c].id!==b.id;c++);n.update(p());var d=n.spin(360/a.participants.length*(a.participants.length-c-1)+360+360/a.participants.length/2+7200);m(function(){a.winner=b;a.participants[c]=b;a.spinning=!1;a.$apply();e.pop("success","Selected",b.name)},d.duration)},r=function(b){f.log("Connected "+b);h.subscribe("/app/participants",function(c){c=angular.fromJson(c.body);
a.participants=c.entries;a.connected=c.connected;l()});h.subscribe("/topic/added",function(c){c=angular.fromJson(c.body);a.participants.push(c);l()});h.subscribe("/topic/deleted",function(c){c=angular.fromJson(c.body);var b;for(b=0;b<a.participants.length&&a.participants[b].id!==c;b++);a.participants.splice(b,1);l()});h.subscribe("/topic/spin",function(a){u(angular.fromJson(a.body))});h.subscribe("/topic/count",function(b){b=angular.fromJson(b.body);a.connected=b;l()})},t=function(b){a.connected=
0;l();f.log("STOMP: "+b);m(k,1E4);f.log("STOMP: Reconnecting in 10 seconds")};k();a.remove=function(a){h.send("/app/remove",{},JSON.stringify(a.id))};var p=function(){var b=[];angular.forEach(a.participants,function(a){this.push(a.name.substring(0,8))},b);return b};g=Math.min(g.innerWidth/2,220)-20;var n=new Spinner("#spinnerContainer",{margins:{top:40,right:10,bottom:10,left:10},outerR:g,h:450,w:2*g+20,data:p()});a.spin=function(){e.clear();d.spin().then(function(b){a.winner=""},function(a){e.pop("error",
"Backend error",a.message);f.log(a)})};a.info=function(){1<a.connected||0===a.connected?e.pop("info","Clients","Currently there are "+a.connected+" Clients"):e.pop("info","Clients","Currently there is "+a.connected+" Client connected")}}]);
myApp=angular.module("spinner.services",[]).factory("myService",["$http",function(a){return{create:function(d){return a.post("participants/",d).then(function(a){return a.data},function(a,d,f,g){var k;a.data&&(k=a.data.message);throw Error(k||"Can't talk to server - server down?");})},spin:function(){return a.get("participants/random").then(function(a){return a.data},function(a,e,m,f){var g;a.data&&(g=a.data.message);throw Error(g||"Can't talk to server - server down?");})}}}]);
angular.module("spinner.directives",[]).directive("zodiac",function(){return{template:'<canvas id="zodiac"></canvas>',restrict:"E",link:function(a,d){new Zodiac(d.children()[0],{directionX:0,directionY:-1,velocityX:[.1,.3],velocityY:[.3,.7],bounceX:!0,bounceY:!1,parallax:.2,pivot:0,density:9999,dotRadius:[1,5],linkColor:"#ffc545",linkDistance:55,linkWidth:2})}}});