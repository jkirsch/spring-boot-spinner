"use strict";var myApp=angular.module("spinner",["spinner.controllers","ngAnimate"]);
"use strict";angular.module("spinner.controllers",["spinner.services","toaster"]).controller("EntriesCtrl",["$scope","myService","toaster","$timeout",function(n,i,t,e){function o(){console.log("STOMP: Attempting connection"),r=new SockJS("/spinner"),c=Stomp.over(r),c.connect({},l,f)}var r,c;n.participants=[],n.winner="",n.newName="",n.connected=0,n.spinning=!1,n.add=function(e){var o={name:n.newName.trim()};t.clear(),i.create(o).then(function(i){n.newName=""},function(n){t.pop("error","Backend error",n.message),console.log(n)})};var a=function(i){n.participants.push(i),s()},s=function(i){n.spinning||(b.update(g()),n.$apply())},p=function(i){var t;for(t=0;t<n.participants.length&&n.participants[t].id!==i;t++);n.participants.splice(t,1),s()},u=function(i){n.connected=i,s()},d=function(i){n.spinning=!0;var o;for(o=0;o<n.participants.length&&n.participants[o].id!==i.id;o++);b.update(g());var r=n.participants.length-o-1,c=r*(360/n.participants.length)+360+360/n.participants.length/2,a=c+7200,s=b.spin(a);e(function(){n.winner=i,n.participants[o]=i,n.spinning=!1,n.$apply(),t.pop("success","Winner",i.name)},s.duration)},l=function(i){console.log("Connected "+i),c.subscribe("/app/participants",function(i){var t=JSON.parse(i.body);n.participants=t.entries,n.connected=t.connected,s()}),c.subscribe("/topic/added",function(n){a(JSON.parse(n.body))}),c.subscribe("/topic/deleted",function(n){p(JSON.parse(n.body))}),c.subscribe("/topic/spin",function(n){d(JSON.parse(n.body))}),c.subscribe("/topic/count",function(n){u(JSON.parse(n.body))})},f=function(n){console.log("STOMP: "+n),setTimeout(o,1e4),console.log("STOMP: Reconecting in 10 seconds")};o(),n.remove=function(n){c.send("/app/remove",{},JSON.stringify(n.id))};var g=function(){var i=[];return angular.forEach(n.participants,function(n){this.push(n.name.substring(0,8))},i),i},m=Math.min(window.innerWidth/2,220)-20,b=new Spinner("#spinnerContainer",{margins:{top:40,right:10,bottom:10,left:10},outerR:m,h:450,w:2*m+20,data:g()});n.spin=function(){t.clear(),i.spin().then(function(i){n.winner=""},function(n){t.pop("error","Backend error",n.message),console.log(n)})}}]);
var myApp=angular.module("spinner.services",[]).factory("myService",["$http",function(r){var t={create:function(t){return r.post("participants/",t).then(function(r){return r.data},function(r,t,n,a){var e;throw r.data&&(e=r.data.message),new Error(e||"Can't talk to server - server down?")})},spin:function(){return r.get("participants/random").then(function(r){return r.data},function(r,t,n,a){var e;throw r.data&&(e=r.data.message),new Error(e||"Can't talk to server - server down?")})}};return t}]);