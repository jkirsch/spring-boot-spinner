var myApp=angular.module("spinner",["spinner.controllers","ngAnimate"]);
angular.module("spinner.controllers",["spinner.services","toaster"]).controller("EntriesCtrl",["$scope","myService","toaster","$timeout","$log","$window",function(n,t,e,i,o,r){"use strict";function c(){o.log("STOMP: Attempting connection"),a=new SockJS("/spinner"),s=Stomp.over(a),s.connect({},g,m)}var a,s;n.participants=[],n.winner="",n.newName="",n.connected=0,n.spinning=!1,n.add=function(i){var r={name:n.newName.trim()};e.clear(),t.create(r).then(function(t){n.newName=""},function(n){e.pop("error","Backend error",n.message),o.log(n)})};var p=function(t){n.participants.push(t),u()},u=function(t){n.spinning||(v.update(b()),n.$apply())},l=function(t){var e;for(e=0;e<n.participants.length&&n.participants[e].id!==t;e++);n.participants.splice(e,1),u()},d=function(t){n.connected=t,u()},f=function(t){n.spinning=!0;var o;for(o=0;o<n.participants.length&&n.participants[o].id!==t.id;o++);v.update(b());var r=n.participants.length-o-1,c=r*(360/n.participants.length)+360+360/n.participants.length/2,a=c+7200,s=v.spin(a);i(function(){n.winner=t,n.participants[o]=t,n.spinning=!1,n.$apply(),e.pop("success","Selected",t.name)},s.duration)},g=function(t){o.log("Connected "+t),s.subscribe("/app/participants",function(t){var e=angular.fromJson(t.body);n.participants=e.entries,n.connected=e.connected,u()}),s.subscribe("/topic/added",function(n){p(angular.fromJson(n.body))}),s.subscribe("/topic/deleted",function(n){l(angular.fromJson(n.body))}),s.subscribe("/topic/spin",function(n){f(angular.fromJson(n.body))}),s.subscribe("/topic/count",function(n){d(angular.fromJson(n.body))})},m=function(n){d(0),o.log("STOMP: "+n),i(c,1e4),o.log("STOMP: Reconnecting in 10 seconds")};c(),n.remove=function(n){s.send("/app/remove",{},JSON.stringify(n.id))};var b=function(){var t=[];return angular.forEach(n.participants,function(n){this.push(n.name.substring(0,8))},t),t},h=Math.min(r.innerWidth/2,220)-20,v=new Spinner("#spinnerContainer",{margins:{top:40,right:10,bottom:10,left:10},outerR:h,h:450,w:2*h+20,data:b()});n.spin=function(){e.clear(),t.spin().then(function(t){n.winner=""},function(n){e.pop("error","Backend error",n.message),o.log(n)})},n.info=function(){n.connected>1||0===n.connected?e.pop("info","Clients","Currently there are "+n.connected+" Clients"):e.pop("info","Clients","Currently there is "+n.connected+" Client connected")}}]);
var myApp=angular.module("spinner.services",[]).factory("myService",["$http",function(r){"use strict";var t={create:function(t){return r.post("participants/",t).then(function(r){return r.data},function(r,t,n,a){var e;throw r.data&&(e=r.data.message),new Error(e||"Can't talk to server - server down?")})},spin:function(){return r.get("participants/random").then(function(r){return r.data},function(r,t,n,a){var e;throw r.data&&(e=r.data.message),new Error(e||"Can't talk to server - server down?")})}};return t}]);