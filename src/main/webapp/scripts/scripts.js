var myApp=angular.module("spinner",["spinner.controllers","ngAnimate"]);
angular.module("spinner.controllers",["spinner.services","toaster"]).controller("EntriesCtrl",["$scope","myService","toaster","$timeout","$log","$window",function(n,e,t,i,r,o){"use strict";function c(){r.log("STOMP: Attempting connection"),a=new SockJS("/spinner"),p=Stomp.over(a),p.connect({},g,m)}var a,p;n.participants=[],n.winner="",n.newName="",n.connected=0,n.spinning=!1,n.add=function(i){var o={name:n.newName.trim()};t.clear(),e.create(o).then(function(e){n.newName=""},function(n){t.pop("error","Backend error",n.message),r.log(n)})};var s=function(e){n.participants.push(e),u()},u=function(e){n.spinning||(v.update(b()),n.$apply())},d=function(e){var t;for(t=0;t<n.participants.length&&n.participants[t].id!==e;t++);n.participants.splice(t,1),u()},f=function(e){n.connected=e,u()},l=function(e){n.spinning=!0;var r;for(r=0;r<n.participants.length&&n.participants[r].id!==e.id;r++);v.update(b());var o=n.participants.length-r-1,c=o*(360/n.participants.length)+360+360/n.participants.length/2,a=c+7200,p=v.spin(a);i(function(){n.winner=e,n.participants[r]=e,n.spinning=!1,n.$apply(),t.pop("success","Winner",e.name)},p.duration)},g=function(e){r.log("Connected "+e),p.subscribe("/app/participants",function(e){var t=JSON.parse(e.body);n.participants=t.entries,n.connected=t.connected,u()}),p.subscribe("/topic/added",function(n){s(JSON.parse(n.body))}),p.subscribe("/topic/deleted",function(n){d(JSON.parse(n.body))}),p.subscribe("/topic/spin",function(n){l(JSON.parse(n.body))}),p.subscribe("/topic/count",function(n){f(JSON.parse(n.body))})},m=function(n){f(0),r.log("STOMP: "+n),i(c,1e4),r.log("STOMP: Reconnecting in 10 seconds")};c(),n.remove=function(n){p.send("/app/remove",{},JSON.stringify(n.id))};var b=function(){var e=[];return angular.forEach(n.participants,function(n){this.push(n.name.substring(0,8))},e),e},h=Math.min(o.innerWidth/2,220)-20,v=new Spinner("#spinnerContainer",{margins:{top:40,right:10,bottom:10,left:10},outerR:h,h:450,w:2*h+20,data:b()});n.spin=function(){t.clear(),e.spin().then(function(e){n.winner=""},function(n){t.pop("error","Backend error",n.message),r.log(n)})},n.info=function(){n.connected>1||0===n.connected?t.pop("info","Clients","Currently there are "+n.connected+" Clients"):t.pop("info","Clients","Currently there is "+n.connected+" Client connected")}}]);
var myApp=angular.module("spinner.services",[]).factory("myService",["$http",function(r){"use strict";var t={create:function(t){return r.post("participants/",t).then(function(r){return r.data},function(r,t,n,a){var e;throw r.data&&(e=r.data.message),new Error(e||"Can't talk to server - server down?")})},spin:function(){return r.get("participants/random").then(function(r){return r.data},function(r,t,n,a){var e;throw r.data&&(e=r.data.message),new Error(e||"Can't talk to server - server down?")})}};return t}]);